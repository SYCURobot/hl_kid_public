# Filters

* How to
** Add a new filter folder
Follow one of the existing folders as an example.
  1. Create your folder in [[.][hl_kid_public/Vision/Filters]].
  2. Add your folder in [[../../CMakeLists.txt][hl_kid_public/CMakeLists.txt]] with others vision source folders.
  3. Add the factory files to your folder.
  4. Add a Source.cmake to your folder. 
  5. Add your new factory to [[FilterFactory.cpp]] and [[FilterFactory.hpp]].
** Add a new filter to an existing folder
Follow one of the existing filters as an example.
  1. Create your filter class in an existing filter folder.
  2. Add it to the Source.cmake of this folder.
  3. Add the class constructor to the Factory of the filter folder.

* The intensive use of factories (legacy)

In order to allow dynamic creation of object from json, Filter can be created
through the use of the `FilterFactory`. Since there is a large number of filters,
we decided to separate them in different categories.

In order to reduce the compilation time when the header of a filter is modified,
each category has its own factory. Thus, the global factory does not need to be
updated since it references the header of the category factory which is not
supposed to be modified. This modification has been brought because the
compilation of `FilterFactory` was starting to be particularly long, especially
while compiling on the robot.

Example: The filter `Goal/GoalByROI.hpp` is modified, then, only the two
following files need to be updated: `GoalByROI.cpp` and `GoalFactory.cpp`

